plugins {
    id 'maven-publish'
    id 'net.minecrell.licenser' version '0.4.1'
    id 'fabric-loom' version '0.5.25' apply false
    id 'com.github.johnrengelman.shadow' version '4.0.0' apply false
    id "com.diffplug.gradle.spotless" version "4.3.0"
}

repositories {
    maven { // modmaven, maven proxy
        name 'modmaven'
        url "https://modmaven.k-4u.nl/"
    }
}

// Create version number
ext.pr = System.getenv('PR_NUMBER') ?: ""
if (ext.pr) {
    version = version + "+pr." + ext.pr
}

ext.branch = System.getenv('BRANCH') ?: ""
if (ext.branch) {
    version = version + "+branch." + ext.branch
}

ext.release = System.getenv('RELEASE') ?: ""
if (ext.release) {
  version = ext.release
}

// Maven group and artifact name
group = artifact_group
archivesBaseName = artifact_basename

subprojects {
    apply plugin: 'java'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    group = parent.group
    archivesBaseName = parent.archivesBaseName + "-" + name
    version = parent.version

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    compileJava {
        sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
        options.deprecation = false
    }

    // ensure everything uses UTF-8 and not some random codepage chosen by gradle
    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    javadoc {
        classpath = sourceSets.main.compileClasspath
        source = sourceSets.main.java
        options.addStringOption('Xdoclint:none', '-quiet')
        options.encoding = 'UTF-8'
        options.charSet = 'UTF-8'
    }

    task javadocJar(type: Jar) {
        from javadoc
        classifier = "javadoc"
    }

    task sourcesJar(type: Jar) {
        classifier = "sources"
        from sourceSets.main.allJava
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    publishing {
        if(["api", "core", "fabric", "forge"].contains(project.name)) {
            publications {
                "$project.name"(MavenPublication) {
                    groupId project.group
                    artifactId project.name
                    version project.version
                    from components.java
                }
            }
            repositories {
                maven {
                    credentials {
                        username System.getenv("GITHUB_ACTOR")
                        password System.getenv("GITHUB_TOKEN")
                    }
                    name = "GitHubPackages"
                    url = "https://maven.pkg.github.com/AppliedEnergistics/MEtrics"
                }
            }
        }
    }
}

spotless {
    java {
        target '**/*.java'

        indentWithSpaces()
        eclipse().configFile 'codeformat/codeformat.xml'
    }
    //format 'json', {
    //    target '**/*.json'
    //   targetExclude 'src/generated/resources/**'
    //    prettier().config(['parser': 'json'])
    //}
}
